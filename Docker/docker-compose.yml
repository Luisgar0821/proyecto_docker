version: '3.1'

services:
  db:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: lung_cancer
    ports:
      - "5433:5432"
    volumes:
      - ./create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql

  airflow-init:
    image: apache/airflow:2.7.3
    container_name: airflow_init
    depends_on:
      - db
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:123456@db:5432/lung_cancer
    entrypoint: >
      bash -c "
        pip install pycountry &&
        airflow db migrate &&
        airflow users create --username airflow --firstname Admin --lastname User --role Admin --email airflow@example.com --password airflow
      "

  airflow-webserver:
    image: apache/airflow:2.7.3
    container_name: airflow_webserver
    restart: always
    depends_on:
      - airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:123456@db:5432/lung_cancer
    volumes:
      - ../airflow/dags:/opt/airflow/dags
      - ../airflow/logs:/opt/airflow/logs
      - ../airflow/plugins:/opt/airflow/plugins
      - ../airflow/dags/DATASET:/opt/airflow/dags/DATASET
    ports:
      - "8080:8080"
    command: >
      bash -c "
        pip install pycountry &&
        airflow webserver
      "

  airflow-scheduler:
    image: apache/airflow:2.7.3
    container_name: airflow_scheduler
    restart: always
    depends_on:
      - airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:123456@db:5432/lung_cancer
    volumes:
      - ../airflow/dags:/opt/airflow/dags
      - ../airflow/logs:/opt/airflow/logs
      - ../airflow/plugins:/opt/airflow/plugins
    command: >
      bash -c "
        pip install pycountry &&
        airflow scheduler
      "

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    extra_hosts:
      - "host.docker.internal:host-gateway"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    ports:
      - "8089:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka

  kafka-producer:
    image: python:3.9
    container_name: kafka_producer
    depends_on:
      - kafka
      - db
    volumes:
      - ../kafka:/app
    working_dir: /app
    command: /bin/bash -c "pip install kafka-python psycopg2-binary && python producer.py"

  kafka-consumer:
    image: python:3.9
    container_name: kafka_consumer
    depends_on:
      - kafka
    volumes:
      - ../kafka:/app
    working_dir: /app
    command: /bin/bash -c "pip install kafka-python && python consumer.py"

  streamlit:
    build:
      context: ../kafka/dashboard
      dockerfile: Dockerfile.streamlit
    container_name: streamlit_dashboard
    ports:
      - "8501:8501"
    depends_on:
      - kafka
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  postgres-db-volume:
